defaultRules:
  create: false
  # rules:
  #   node: true
  #   nodeExporterAlerting: true
  #   nodeExporterRecording: true
kubernetesServiceMonitors:
  enabled: false
prometheus:
  service:
    type: LoadBalancer
alertmanager:
  enabled: false
kubeStateMetrics:
  enabled: false
prometheus-node-exporter:
  enabled: true
  hostRootFsMount: 
    enabled: false  # Disable /rootfs mount to avoid "not shared or slave mount" error
grafana:
  service:
    type: LoadBalancer
    port: 3000
  persistence:
    type: statefulset
    enabled: true
    annotations:
      helm.sh/resource-policy: keep
  securityContext:
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472
  initChownData:
    enabled: false

  # dashboards:
  #   custom-dashboard:
  #     file: prometheus/nodes.json
    #   prometheus-stats:
    #     gnetId: 2
    #     revision: 2
    #     datasource: Prometheus
    #   local-dashboard:
    #     url: https://example.com/repository/test.json
    #     curlOptions: "-sLf"
    #     token: ''
    #   local-dashboard-base64:
    #     url: https://example.com/repository/test-b64.json
    #     token: ''
    #     b64content: true
    #   local-dashboard-gitlab:
    #     url: https://example.com/repository/test-gitlab.json
    #     gitlabToken: ''
    #   local-dashboard-bitbucket:
    #     url: https://example.com/repository/test-bitbucket.json
    #     bearerToken: ''
    #   local-dashboard-azure:
    #     url: https://example.com/repository/test-azure.json
    #     basic: ''
    #     acceptHeader: '*/*'

## https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml#L687
## Configure grafana alerting (can be templated)
## ref: https://docs.grafana.com/alerting/set-up/provision-alerting-resources/file-provisioning/
##
  alerting:
    policies.yaml:
      apiVersion: 1
      policies:
        - orgId: 1
          receiver: grafana-default-email
          group_by:
            - grafana_folder
            - alertname
          routes:
            - receiver: AWX Demo Job Template
              object_matchers:
                - - node_load1
                  - =
                  - high
              group_wait: 1s
    rules.yaml:
      apiVersion: 1
      groups:
        - orgId: 1
          name: node_load1
          folder: node
          interval: 30s
          rules:
            - uid: fexhl3vqjdwcga
              title: Load Average
              condition: F
              data:
                - refId: A
                  relativeTimeRange:
                    from: 3600
                    to: 0
                  datasourceUid: prometheus
                  model:
                    adhocFilters: []
                    datasource:
                        type: prometheus
                        uid: prometheus
                    editorMode: code
                    expr: node_load1{job="node-exporter", cluster=""}
                    instant: true
                    interval: ""
                    intervalMs: 30000
                    legendFormat: 1m load average
                    maxDataPoints: 43200
                    range: false
                    refId: A
                - refId: F
                  datasourceUid: __expr__
                  model:
                    conditions:
                        - evaluator:
                            params:
                                - 6
                            type: gt
                          operator:
                            type: and
                          query:
                            params:
                                - F
                          reducer:
                            params: []
                            type: last
                          type: query
                          unloadEvaluator:
                            params:
                                - 6
                            type: lt
                    datasource:
                        type: __expr__
                        uid: __expr__
                    expression: A
                    intervalMs: 1000
                    maxDataPoints: 43200
                    refId: F
                    type: threshold
              dashboardUid: 7d57716318ee0dddbac5a7f451fb7753
              panelId: 3
              noDataState: NoData
              execErrState: Error
              # for: 1m
              for: 0s
              annotations:
                __dashboardUid__: 7d57716318ee0dddbac5a7f451fb7753
                __panelId__: "3"
              labels:
                node_load1: high
              isPaused: false
              notification_settings:
                receiver: AWX Demo Job Template
    contactpoints.yaml:
      secret:
        apiVersion: 1
        contactPoints:
          - orgId: 1
            name: AWX Demo Job Template
            receivers:
              - uid: fexgiogxwewhsd
                type: webhook
                settings:
                  authorization_credentials: tJjEzHjCuTgaQ8nb8E0602MuwJzKm8
                  authorization_scheme: Bearer
                  httpMethod: POST
                  maxAlerts: "1"
                  url: http://awx-service.awx.svc.cluster.local:8081/api/v2/job_templates/7/launch/
                disableResolveMessage: true
    
    # templates.yaml:
    #   apiVersion: 1
    #   templates:
    #     - orgId: 1
    #       name: my_first_template
    #       template: |
    #         {{ `
    #         {{ define "my_first_template" }}
    #         Custom notification message
    #         {{ end }}
    #         ` }}
    #
    # mutetimes.yaml
    #   apiVersion: 1
    #   muteTimes:
    #     - orgId: 1
    #       name: mti_1
    #       # refer to https://prometheus.io/docs/alerting/latest/configuration/#time_interval-0
    #       time_intervals: {}

  ## Configure notifiers
  ## ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels
  ##
  notifiers: {}
  #  notifiers.yaml:
  #    notifiers:
  #    - name: email-notifier
  #      type: email
  #      uid: email1
  #      # either:
  #      org_id: 1
  #      # or
  #      org_name: Main Org.
  #      is_default: true
  #      settings:
  #        addresses: an_email_address@example.com
  #    delete_notifiers:

  ## Configure grafana dashboard providers
  ## ref: http://docs.grafana.org/administration/provisioning/#dashboards
  ##
  ## `path` must be /var/lib/grafana/dashboards/<provider_name>
  ##
  dashboardProviders: {}
  #  dashboardproviders.yaml:
  #    apiVersion: 1
  #    providers:
  #    - name: 'default'
  #      orgId: 1
  #      folder: ''
  #      type: file
  #      disableDeletion: false
  #      editable: true
  #      options:
  #        path: /var/lib/grafana/dashboards/default